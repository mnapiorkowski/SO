diff -rupNEZbB old/usr/include/minix/callnr.h new/usr/include/minix/callnr.h
--- old/usr/include/minix/callnr.h	2014-09-14 11:00:44.000000000 +0200
+++ new/usr/include/minix/callnr.h	2022-04-30 18:26:15.000000000 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_GETLCAPID		(PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB old/usr/include/minix/ipc.h new/usr/include/minix/ipc.h
--- old/usr/include/minix/ipc.h	2014-09-14 11:00:44.000000000 +0200
+++ new/usr/include/minix/ipc.h	2022-04-30 18:26:15.000000000 +0200
@@ -1551,6 +1551,14 @@ typedef struct {
 _ASSERT_MSG_SIZE(mess_pm_lc_waitpid);
 
 typedef struct {
+	pid_t pid_1;
+	pid_t pid_2;
+
+	uint8_t padding[48];
+} mess_pm_lc_getlcapid;
+_ASSERT_MSG_SIZE(mess_pm_lc_getlcapid);
+
+typedef struct {
 	int suid;
 
 	uint8_t padding[52];
@@ -2203,6 +2211,7 @@ typedef struct {
 		mess_pm_lc_sigset	m_pm_lc_sigset;
 		mess_pm_lc_time		m_pm_lc_time;
 		mess_pm_lc_waitpid	m_pm_lc_waitpid;
+		mess_pm_lc_getlcapid	m_pm_lc_getlcapid;
 		mess_pm_lexec_exec_new	m_pm_lexec_exec_new;
 		mess_pm_lsys_getepinfo	m_pm_lsys_getepinfo;
 		mess_pm_lsys_getprocnr	m_pm_lsys_getprocnr;
diff -rupNEZbB old/usr/include/unistd.h new/usr/include/unistd.h
--- old/usr/include/unistd.h	2014-09-14 11:00:43.000000000 +0200
+++ new/usr/include/unistd.h	2022-04-30 18:26:15.000000000 +0200
@@ -122,6 +122,7 @@ int	 getlogin_r(char *, size_t);
 pid_t	 getpgrp(void);
 pid_t	 getpid(void);
 pid_t	 getppid(void);
+pid_t	 getlcapid(pid_t, pid_t);
 uid_t	 getuid(void);
 int	 isatty(int);
 int	 link(const char *, const char *);
diff -rupNEZbB old/usr/src/include/unistd.h new/usr/src/include/unistd.h
--- old/usr/src/include/unistd.h	2014-09-13 23:56:50.000000000 +0200
+++ new/usr/src/include/unistd.h	2022-04-30 18:26:15.000000000 +0200
@@ -122,6 +122,7 @@ int	 getlogin_r(char *, size_t);
 pid_t	 getpgrp(void);
 pid_t	 getpid(void);
 pid_t	 getppid(void);
+pid_t	 getlcapid(pid_t, pid_t);
 uid_t	 getuid(void);
 int	 isatty(int);
 int	 link(const char *, const char *);
diff -rupNEZbB old/usr/src/lib/libc/misc/getlcapid.c new/usr/src/lib/libc/misc/getlcapid.c
--- old/usr/src/lib/libc/misc/getlcapid.c	1970-01-01 01:00:00.000000000 +0100
+++ new/usr/src/lib/libc/misc/getlcapid.c	2022-04-30 18:26:15.000000000 +0200
@@ -0,0 +1,29 @@
+#include <lib.h>
+#include <minix/rs.h>
+
+int get_pm_endpt(endpoint_t *pt)
+{
+        return minix_rs_lookup("pm", pt);
+}
+
+pid_t getlcapid(pid_t pid_1, pid_t pid_2)
+{
+        endpoint_t pm_pt;
+        message m;
+
+	memset(&m, 0, sizeof(m));
+	m.m_pm_lc_getlcapid.pid_1 = pid_1;
+	m.m_pm_lc_getlcapid.pid_2 = pid_2;
+
+        if (get_pm_endpt(&pm_pt) != 0) {
+                errno = ENOSYS;
+                return -1;
+        }
+
+        pid_t lca = _syscall(pm_pt, PM_GETLCAPID, &m);
+	if (lca == EINVAL || lca == ESRCH) {
+		errno = lca;
+		return -1;
+	}
+	return lca;
+}
diff -rupNEZbB old/usr/src/lib/libc/misc/Makefile.inc new/usr/src/lib/libc/misc/Makefile.inc
--- old/usr/src/lib/libc/misc/Makefile.inc	2014-09-13 23:56:50.000000000 +0200
+++ new/usr/src/lib/libc/misc/Makefile.inc	2022-04-30 18:26:15.000000000 +0200
@@ -7,4 +7,4 @@
 SRCS+=	initfini.c
 
 # for -fstack-protector
-SRCS+=	stack_protector.c
+SRCS+=	stack_protector.c getlcapid.c
diff -rupNEZbB old/usr/src/minix/include/minix/callnr.h new/usr/src/minix/include/minix/callnr.h
--- old/usr/src/minix/include/minix/callnr.h	2014-09-13 23:56:50.000000000 +0200
+++ new/usr/src/minix/include/minix/callnr.h	2022-04-30 18:26:15.000000000 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_GETLCAPID        	(PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB old/usr/src/minix/servers/pm/do_getlcapid.c new/usr/src/minix/servers/pm/do_getlcapid.c
--- old/usr/src/minix/servers/pm/do_getlcapid.c	1970-01-01 01:00:00.000000000 +0100
+++ new/usr/src/minix/servers/pm/do_getlcapid.c	2022-04-30 18:26:15.000000000 +0200
@@ -0,0 +1,73 @@
+#include "pm.h"
+#include "mproc.h"
+#include <stdio.h>
+
+#define WRONG_PID -1
+#define NO_PARENT -1
+
+int get_proc_index(pid_t pid)
+{
+	for (int i = 0; i < NR_PROCS; i++) {
+		if ((mproc[i].mp_flags & IN_USE) && mproc[i].mp_pid == pid)
+			return i;
+	}
+	return WRONG_PID;	/* Process with given pid is not running. */
+}
+
+int parent_index(int proc_index)
+{
+	if (mproc[proc_index].mp_pid == INIT_PID)
+		return NO_PARENT;
+	else
+		return mproc[proc_index].mp_parent;
+}
+
+int proc_depth(int proc_index)
+{
+	int depth = 0;
+	int i = parent_index(proc_index);
+	while (i != NO_PARENT) {
+		i = parent_index(i);
+		depth++;
+	}
+	return depth;
+}
+
+int do_getlcapid()
+{
+	pid_t pid_1 = m_in.m_pm_lc_getlcapid.pid_1;
+	pid_t pid_2 = m_in.m_pm_lc_getlcapid.pid_2;
+
+	int i1 = get_proc_index(pid_1);
+	int i2 = get_proc_index(pid_2);
+	if (i1 == WRONG_PID || i2 == WRONG_PID)
+		return EINVAL;	/* At least one process with given pid is not running. */
+
+	int d1 = proc_depth(i1);
+	int d2 = proc_depth(i2);
+	if (d1 == 0 || d2 == 0)
+		return ESRCH;	/* At least one process is the root, which means they have no LCA. */
+
+	/* Align both nodes to the same depth. */
+	while (d1 != d2) {
+		if (d1 > d2) {
+			i1 = parent_index(i1);
+			d1--;
+		} else {
+			i2 = parent_index(i2);
+			d2--;
+		}
+	}
+
+	/* Go up the tree. */
+	do {
+		i1 = parent_index(i1);
+		i2 = parent_index(i2);
+	} while (i1 != i2 && i1 != NO_PARENT && i2 != NO_PARENT);
+
+	if (i1 != i2)
+		return ESRCH;	/* Processes don't have common ancestor. */
+
+	int lca_pid = mproc[i1].mp_pid;
+	return lca_pid;
+}
diff -rupNEZbB old/usr/src/minix/servers/pm/Makefile new/usr/src/minix/servers/pm/Makefile
--- old/usr/src/minix/servers/pm/Makefile	2014-09-13 23:56:50.000000000 +0200
+++ new/usr/src/minix/servers/pm/Makefile	2022-04-30 18:26:15.000000000 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c do_getlcapid.c
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -rupNEZbB old/usr/src/minix/servers/pm/proto.h new/usr/src/minix/servers/pm/proto.h
--- old/usr/src/minix/servers/pm/proto.h	2014-09-13 23:56:50.000000000 +0200
+++ new/usr/src/minix/servers/pm/proto.h	2022-04-30 18:26:15.000000000 +0200
@@ -89,3 +89,6 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+
+/* do_getlcapid.c */
+int do_getlcapid(void);
diff -rupNEZbB old/usr/src/minix/servers/pm/table.c new/usr/src/minix/servers/pm/table.c
--- old/usr/src/minix/servers/pm/table.c	2014-09-13 23:56:50.000000000 +0200
+++ new/usr/src/minix/servers/pm/table.c	2022-04-30 18:26:15.000000000 +0200
@@ -58,5 +58,6 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,	/* getsysinfo(2) */
+	CALL(PM_GETLCAPID)	= do_getlcapid		/* getlcapid */
 };
